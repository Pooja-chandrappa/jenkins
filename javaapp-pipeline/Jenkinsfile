pipeline {
       agent { label 'agent' }

    environment {
        ARTIFACTORY_SERVER_ID = 'jfrog'
        ARTIFACTORY_REPO_PATH = 'libs-release-local/javaapp-tomcat/'
        WAR_NAME = 'artisantek-app.war'
    }

    stages {
        stage('Checkout') {
            agent { label 'agent' }
            steps {
                git url: 'https://github.com/Pooja-chandrappa/jenkins.git'
            }
        }

        stage('Tests') {
            
            parallel {
                stage('Unit Tests') {
                agent { label 'agent' }
                    steps {
                        dir('javaapp-tomcat') {
                            sh 'mvn clean test'
                        }
                    }
                }
                stage('Trivy Scan') {
                agent { label 'agent' }
                    steps {
                        dir('javaapp-tomcat') {
                            sh '''
                                wget -q https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/html.tpl -O html.tpl
                                trivy fs --format template --template "@html.tpl" -o report.html .
                            '''
                        }
                    }
                }
            }
        }

        //stage('Sonar Analysis') {
         //   agent { label 'agent' }
          //  steps {
          //      dir('javaapp-tomcat') {
          //          withSonarQubeEnv('sonar') {
           //             sh '''
            //                mvn clean verify sonar:sonar \
            //                -Dsonar.projectKey=java-app \
            //                -Dsonar.projectName=java-app 
            //            '''
              //      }
              //  }
          //  }
     //   }

        stage('Build WAR') {
            agent { label 'agent' }
            steps {
                dir('javaapp-tomcat') {
                    sh 'mvn clean package'
                }
            }
        }

        stage('Publish WAR to Artifactory') {
            agent { label 'agent' }
            steps {
                dir('javaapp-tomcat/target') {
                    rtUpload(
                        serverId: "${ARTIFACTORY_SERVER_ID}",
                        spec: """{
                            "files": [
                                {
                                    "pattern": "${WAR_NAME}",
                                    "target": "${ARTIFACTORY_REPO_PATH}"
                                }
                            ]
                        }"""
                    )
                }
            }
        }

        stage('Download WAR and Deploy to Tomcat') {
            agent { label 'ubunt2' }  // This should run on your Tomcat server agent
            environment {
                KEY = 'sshcred'      // Jenkins secret credential: SSH private key
                USER = 'ubuntu'
                HOST = '172.31.2.23'
            }
            steps {
                script {
                    // Download from Artifactory
                    def server = Artifactory.server("${ARTIFACTORY_SERVER_ID}")
                    def downloadSpec = """{
                        "files": [{
                            "pattern": "${ARTIFACTORY_REPO_PATH}${WAR_NAME}",
                            "target": "javaapp-tomcat/target/"
                        }]
                    }"""
                    server.download(downloadSpec)
                }

                // Deploy WAR to remote Tomcat
                sh '''
                    cd javaapp-tomcat
                    chmod 400 $KEY
                    scp -o StrictHostKeyChecking=no -i $KEY target/artisantek-app.war $USER@$HOST:/home/ubuntu
                    ssh -o StrictHostKeyChecking=no -i $KEY $USER@$HOST 'sudo mv /home/ubuntu/artisantek-app.war /opt/tomcat/webapps/'
                    ssh -o StrictHostKeyChecking=no -i $KEY $USER@$HOST 'sudo systemctl restart tomcat'
                '''
            }
        }
    }
post {
    always {
        cleanWs()
    }
}
  
}
